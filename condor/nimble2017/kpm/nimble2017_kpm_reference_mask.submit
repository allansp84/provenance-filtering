# The HTCondor Vanilla Universe is the only Universe available on our installation

universe        = vanilla

notification    = never

getenv          = True
home_path   = /data/dasilvap
environment = "PYTHONPATH=$(home_path)/.local/opencv-2.4.13/lib/python2.7/dist-packages:$(home_path)/VENV/nd-env/lib/python2.7/site-packages:"

# Variables
filename = nimble2016_kpm_reference_mask
output_path = working_Dec072016_reference_mask
n_kdtree = 8
kp_number = 2000

# Rank (ex: this job prefers higher memory machines)
rank = kflops

# Job Requirements (ex: this job needs 64 bit Linux with more than 512mb of RAM)
request_memory  = 5 GB
request_cpus    = 12

# The executable to run, relative to the ClassAd file location
initialdir      = $(home_path)/developments/near-duplicate-detection
executable      = condor/nimble2016/kpm/$(filename).sh

# Output file ($(Process) refers to the JobID)
error           = logs/err/$(filename).$(Cluster).$(Process).err
log             = logs/log/$(filename).$(Cluster).$(Process).log
output          = logs/out/$(filename).$(Cluster).$(Process).out

# Command line arguments to use with the program, separated by spaces
# --feature_extraction --resize_img --subspace_algo 1 --n_components 32

# arguments       = --approach kp_matching --dataset 3 --dataset_path dataset/Nimble2016 --output_path $(output_path) --n_jobs $(request_cpus) --detector_kpm SURF --descriptor_kpm SURF --limit_kpm $(kp_number) --index_type_kpm KDFOREST --n_kdtree_kpm $(n_kdtree) --distance_kpm L2 --search_type_kpm knn --score_type_kpm vote --n_neighbors_kpm 1 --rfactor_kpm 1.0 --feature_extraction --compute_distances_kpm --matching --plot_pr_curves
# queue

# arguments       = --approach kp_matching --dataset 3 --dataset_path dataset/Nimble2016 --output_path $(output_path) --n_jobs $(request_cpus) --detector_kpm SURF --descriptor_kpm SURF --limit_kpm $(kp_number) --index_type_kpm KDFOREST --n_kdtree_kpm $(n_kdtree) --distance_kpm L2 --search_type_kpm knn --score_type_kpm vote --n_neighbors_kpm 1 --rfactor_kpm 1.0 --feature_extraction --compute_distances_kpm --matching --plot_pr_curves --subspace_algo 1 --n_components 32
# queue

arguments       = --approach kp_matching --dataset 3 --dataset_path dataset/Nimble2016 --output_path $(output_path) --n_jobs $(request_cpus) --detector_kpm SURF --descriptor_kpm SURF --limit_kpm $(kp_number) --index_type_kpm KDFOREST --n_kdtree_kpm $(n_kdtree) --distance_kpm L2 --search_type_kpm knn --score_type_kpm vote --n_neighbors_kpm 1 --rfactor_kpm 1.0 --feature_extraction --compute_distances_kpm --context_based_rerank --use_reference_mask  --subspace_algo 1 --n_components 32
queue

arguments       = --approach kp_matching --dataset 3 --dataset_path dataset/Nimble2016 --output_path $(output_path) --n_jobs $(request_cpus) --detector_kpm SURF --descriptor_kpm SURF --limit_kpm $(kp_number) --index_type_kpm KDFOREST --n_kdtree_kpm $(n_kdtree) --distance_kpm L2 --search_type_kpm knn --score_type_kpm vote --n_neighbors_kpm 1 --rfactor_kpm 1.0 --compute_distances_kpm --matching --plot_pr_curves --query_contraction --merge_file_ranks --merge_type sum  --subspace_algo 1 --n_components 32
queue
